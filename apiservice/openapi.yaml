openapi: 3.0.0
info:
  title: API Gateway Service
  description: API Gateway for Wikidata and User Management
  version: 1.0.0
servers:
  - url: http://localhost:8008
    description: Development server
  - url: http://SOMEIP:8008
    description: Production server
paths:
  /health:
    get:
      tags:
        - Health
      summary: Check service status
      description: Returns the current status of the API service
      responses:
        '200':
          description: Service is operational
          content:
            application/json:
              schema:
                type: object
                properties:
                  status:
                    type: string
                    enum: [OK]
                    example: OK
  /questions:
    get:
      tags:
        - Questions
      summary: Get all available questions
      description: Retrieves a list of all questions from Wikidata service
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /questions/{category}:
    get:
      tags:
        - Questions
      summary: Get questions by category
      description: Retrieves questions filtered by specified category
      parameters:
        - in: path
          name: category
          required: true
          schema:
            type: string
          description: Question category to filter by
          example: Lugares
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Question'
        '404':
          description: Category not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users:
    get:
      tags:
        - Users
      summary: List all users
      description: Retrieves a list of all registered users
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/User'
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
  /users/{username}:
    get:
      tags:
        - Users
      summary: Get user details
      description: Retrieves detailed information about a specific user
      parameters:
        - in: path
          name: username
          required: true
          schema:
            type: string
          description: Username to lookup
          example: johndoe
      responses:
        '200':
          description: Successful operation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
        '404':
          description: User not found
        '500':
          description: Internal server error
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ErrorResponse'
components:
  schemas:
    Question:
      type: object
      required:
        - id
        - question
        - answer
      properties:
        _id:
          type: string
          example: "60d5ec49b3f1c2b8a4e0c8f1"
        question:
          type: string
          example: "¿A qué lugar corresponde la siguiente foto?"
        category:
          type: string
          example: "Lugares"
        options:
          type: array
          items:
            type: string
          example: ["Francia", "EEUU", "España", "Italia"]
        answer:
          type: string
          example: "Francia"
        image:
          type: string
          format: uri
          example: "https://example.com/paris.jpg"
    User:
      type: object
      properties:
        _id:
          type: string
          example: "60d5ec49b3f1c2b8a4e0c8f1"
        username:
          type: string
          example: "johndoe"
        friends:
          type: array
          items:
            type: string
          example: ["janedoe", "mike"]
    ErrorResponse:
      type: object
      properties:
        error:
          type: string
          example: "Error description"
securitySchemes:
  BearerAuth:
    type: http
    scheme: bearer
    bearerFormat: JWT